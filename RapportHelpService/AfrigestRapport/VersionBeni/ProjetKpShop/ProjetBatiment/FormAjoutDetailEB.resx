<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bValide.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        gg==
</value>
  </data>
  <data name="button2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>